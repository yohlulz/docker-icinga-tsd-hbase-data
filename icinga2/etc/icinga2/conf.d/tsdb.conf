object Host "tsdb_rw" {
	import "generic-host"
	address = "tsdb_rw"

	vars.os = "Linux"
	vars.region_type = "tsdb"
	vars.tsd_mode = "rw"
	vars.port = "4242"
}

object Host "tsdb_ro_1" {
	import "generic-host"
	address = "tsdb_ro_1"

	vars.os = "Linux"
	vars.region_type = "tsdb"
	vars.tsd_mode = "ro"
	vars.port = "4242"
}

object Host "tsdb_ro_2" {
	import "generic-host"
	address = "tsdb_ro_2"

	vars.os = "Linux"
	vars.region_type = "tsdb"
	vars.tsd_mode = "ro"
	vars.port = "4242"
}

apply Service "tsdb-alive" {
        import "generic-service"
        check_command = "check_tsdb"

	max_check_attempts = "10"
	retry_interval = "20"
	check_interval = "60"
	event_command = "restart_tsd"

        assign where host.vars.region_type == "tsdb"
}

object CheckCommand "check_tsdb" {
        import "plugin-check-command"

        command = [ PluginDir + "/check_http" ]

        arguments = {
                "-H" = "$host.address$"
                "-p" = "$host.vars.port$"
                "-u" = "/api/stats"
		"-s" = "$host.address$"
                "-w" = "3"
                "-c" = "15"
		"-t" = "20"
		"perf" = {
			skip_key = true
			value = "-L"
		}
        }

}

apply Service "tsdb-healthy" {
        import "generic-service"
	max_check_attempts = "10"
        retry_interval = "20"
        check_interval = "60"
        check_command = "check_tsdb_health"

        assign where host.vars.tsd_mode == "rw"
}

object CheckCommand "check_tsdb_health" {
        import "plugin-check-command"

        command = [ PluginContribDir + "/check_tsd" ]

        arguments = {
                "-H" = "$host.address$"
                "-p" = "$host.vars.port$"
                "-m" = "tsd.rpc.received"
                "-d" = "300"
                "-x" = "le"
                "-w" = "0.03"
                "-c" = "0.0"
		"-T" = "12"
		"rate" = {
			skip_key = true
			value = "-r"
		}
        }

}

object EventCommand "restart_tsd" {
	import "plugin-event-command"

	command = "/etc/icinga2/handlers/restart_tsd.sh $host.address$ $state$ $state_type$ $check_attempt$"
}

